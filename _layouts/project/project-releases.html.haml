---
layout: project-frame
---
-# Defines the project releases page template
-# Provide get started and download action buttons
-# List releases defined in the project metadata

-# subpages must define a section whose anchor is "supported-version"

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]

-# Release buttons using the latest dev and latest stable releases
.release-bottons.visible-desktop
  - stable_release = latest_stable_release(page)
  - dev_release = latest_dev_release(page)
  - if not (stable_release.nil? && dev_release.nil?)
    .row-fluid.text-center
      - unless stable_release.nil?
        %a.btn.btn-large.btn-success{:href => "#{sourceforge_zip_url(project_description, stable_release)}"}
          %i.icon-cloud-download
          stable #{stable_release.version}
      - unless (stable_release.nil? || dev_release.nil?)
        &nbsp;
      - unless (dev_release.nil? || !dev_release.displayed)
        %a.btn.btn-large.btn-warning{:href => "#{sourceforge_zip_url(project_description, dev_release)}"}
          %i.icon-cloud-download
          development #{dev_release.version}
.row-fluid
  .span12
    .alert.alert-info.text-center
      -# %button.close{:type => 'button', "data-dismiss" =>'alert'}
      -#  &times;
      %i.icon-user-md.icon-large
      :asciidoc
        :doctype: inline
        :project: #{page.project}

        Interested in commercial support? Check out link:/{project}/support/[Red Hat's offering].

.row-fluid
  .span12
    %h2 Series
    - unless project_description.release_series.nil?
      - first_stable_release = true
      - project_description.release_series.values.each do |series|
        - release = series.releases[0]
        - unless series.displayed then next end
        %dl.dl-horizontal
          %dt
            = series.version
            &nbsp;
            %a.btn.btn-info{:href => "#{sourceforge_zip_url(project_description, release)}", :title => "Download"}
              %i.icon-cloud-download
            - if release.stable && first_stable_release
              - doc_root_url = "#{project_description.stable_reference_doc_prefix_url}"
              - first_stable_release = false
            - else
              - doc_root_url = "#{project_description.reference_doc_prefix_url}#{release.version_family}/"
            %a.btn.btn-info{:href => "#{doc_root_url}#{project_description.reference_doc_type}/en-US/html_single/", :title => "Reference documentation"}
              %i.icon-book
          %dd
            %small
              %strong= release.version
              = "-"
              = release.date
            %span.label{:class => "#{release.stable ? 'label-success' : 'label-warning'}"} #{release.stable ? 'stable' : 'development'}
          %dd
            %small
              - group_id = (release.group_id? ? release.group_id : project_description.group_id)
              Maven gav:
              %a{:href => "https://repository.jboss.org/nexus/index.html#nexus-search;gav~#{group_id}~#{project_description.artifact_id}~#{release.version}~~"}>=" #{group_id}:#{project_description.artifact_id}:#{release.version}"
              - if page.project == 'search'
                ; compatible with Hibernate ORM #{release.dependencies.get_version('org.hibernate', 'hibernate-core')}
          %dd
            = series.summary
          %dd
            %a{:href => "./#{series.version}/"}
              More on the #{series.version} series
              %i.icon-circle-arrow-right
          - if not release.announcement_url.nil?
            %dd
              %a{:href => "#{release.announcement_url}"}
                More on the #{release.version} release
                %i.icon-circle-arrow-right
    - else
      %p There are no releases configured for this project.

    Older releases can be found
    %a{:href => "#{project_description.sourceforge_url}"}
      on SourceForge
    or in JBoss's
    %a{:href => "https://repository.jboss.org/nexus/index.html#nexus-search;gav~~#{project_description.artifact_id}~~~"}<
      Maven repository.
    - unless project_description.integrations.nil?
      %h2 Compatibility matrix
      %table.table
        %thead
          %tr
            %th
              = project_description.name
            - project_description.release_series.values.each do |series|
              - unless series.displayed then next end
              %th
                = series.version
        %tbody
          - project_description.integrations.each_pair do |integration_id, integration|
            %tr
              %th
                %a{:href => "#{integration['url']}"}
                  = integration["name"]
              - project_description.release_series.values.each do |series|
                - unless series.displayed then next end
                - constraint = series.integration_constraints[integration_id]
                %td
                  - if constraint == nil
                    N/A
                  - else
                    #{constraint.version}
    ~ content
